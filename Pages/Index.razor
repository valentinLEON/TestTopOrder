@page "/"
@using TestTopOrder.Data
@inject CountriesService CountriesService
@inject IDialogService DialogService

<MudContainer>
	<MudGrid Spacing="3">
		@if (isLoading && countries == null)
		{
			<MudItem xs="12" class="text-center">
				<MudProgressCircular Indeterminate="true" Size="Size.Medium" Color="Color.Primary" />
				Chargement des pays...
			</MudItem>
		}
		else
		{
			@foreach (var country in countries)
			{
				<MudItem xs="12" sm="8" md="2">
					<MudCard Style="height: 300px;">
						<MudCardMedia Image="@country.Flags.Png" Height="100" />
						<MudCardContent Style="display:flex;flex-direction:column;justify-content: center; align-items: center; gap:10px;">
							<MudText Typo="Typo.h6">@country.Name.Common</MudText>
							<MudText Typo="Typo.subtitle2">@string.Join(", ", country.Capital)</MudText>
						</MudCardContent>
						<MudCardActions>
							<MudButton OnClick="() => OpenCountryDetail(country)" Color="Color.Primary">Voir détails</MudButton>
						</MudCardActions>
					</MudCard>
				</MudItem>
			}
		}
	</MudGrid>
</MudContainer>


@code {
	private List<CountryDto> countries;
	private bool isLoading = true;

	protected override async Task OnInitializedAsync()
	{
		try
		{
			countries = await CountriesService.GetCountriesAsync();

		}
		catch (Exception ex)
		{
			Console.WriteLine($"Error: {ex.Message}");
		}
		finally
		{
			isLoading = false;
		}
	}

	private async Task OpenCountryDetail(CountryDto country)
	{
		var parameters = new DialogParameters { ["SelectedCountry"] = country };
		Console.WriteLine("country", country);
		await DialogService.ShowAsync<CountryDialog>("Détails du Pays", parameters);
	}
}